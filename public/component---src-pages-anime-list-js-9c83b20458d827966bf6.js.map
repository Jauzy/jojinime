{"version":3,"sources":["webpack:///./src/pages/anime_list.js"],"names":["aquaImg","require","COLORS","query","Combined","props","user","anime_list","data","allFile","edges","firstLetter","useEffect","anime","targets","translateX","duration","location","path","navigate","navbarColor","LIGHTSECONDARY","title","className","style","borderRadius","boxShadow","id","active","loading","spinner","text","backgroundColor","borderWidth","borderColor","MAIN","width","height","fontSize","href","split","map","item","key","filter","node","childMarkdownRemark","frontmatter","charAt","to","name","favourite","fav","mal_id","type","status","src","objectFit","marginBottom","alt"],"mappings":"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","file":"component---src-pages-anime-list-js-9c83b20458d827966bf6.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport anime from 'animejs'\r\nimport { Container } from 'reactstrap'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { Layout, SEO } from \"../components/Index\"\r\n\r\nconst aquaImg = require('../../static/styles/images/aqua.png')\r\nconst COLORS = require('../../static/constants/Colors')\r\n\r\nconst Combined = (props) => {\r\n    const { user } = props\r\n    const anime_list = props.data.allFile.edges\r\n    const firstLetter = 'A B C D E F G H I J K L M N P Q R S T U V W X Y Z'\r\n    const genres = [\r\n        'Action', 'Adventure', 'Comedy', 'Drama', 'Fantasy', 'Magic', 'Supernatural', 'Horror','Sci-Fi', 'Mystery', 'Psychological', 'Romance',  'Slice of Life'\r\n    ]\r\n\r\n    useEffect(() => {\r\n\r\n        anime({\r\n            targets: '#anime-wrapper',\r\n            translateX: [-1000, 0],\r\n            duration: 2000\r\n        });\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <Layout location={props.location} path={props.path} navigate={props.navigate} navbarColor={COLORS.LIGHTSECONDARY}>\r\n            <SEO title='Anime List' />\r\n            <div className='shape-wave-top'></div>\r\n            <Container>\r\n                <div className='container bg-dark ' style={{ borderRadius: '20px', boxShadow: '0px 0px 10px black' }} id='anime-wrapper'>\r\n\r\n                    <LoadingOverlay\r\n                        active={props.loading}\r\n                        spinner\r\n                        text='Loading your content...'\r\n                    >\r\n                        <div style={{ backgroundColor: '#2D2D2D', borderRadius: '20px' }} className='p-4'>\r\n                            <div className='row'>\r\n                                <div className='col-lg'>\r\n                                    <div className='d-flex'>\r\n                                        <div>\r\n                                            <h4>Anime List Subtitle Indonesia</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr style={{ borderWidth: '5px', borderColor: COLORS.MAIN }} className='rounded-lg mt-1' />\r\n\r\n                                    <div className='d-flex flex-wrap justify-content-center mb-3'>\r\n                                        <a className='btn btn-secondary m-1 p-0 d-flex' style={{ width: '25px', height: '25px', fontSize: 'auto' }} href='#Sec'>\r\n                                            <small className='m-auto'>#</small>\r\n                                        </a>\r\n                                        {firstLetter.split(\" \").map((item) => (\r\n                                            <a className='btn btn-secondary m-1 p-0 d-flex' key={item + 'box'} style={{ width: '25px', height: '25px', fontSize: 'auto' }}\r\n                                                href={'#' + item + '-section'}\r\n                                            >\r\n                                                <small className='m-auto'>{item}</small>\r\n                                            </a>\r\n                                        ))}\r\n                                    </div>\r\n\r\n                                    {firstLetter.split(\" \").map(item => (\r\n                                        <section className='px-3 font-open-sans' id={item + '-section'} key={item + '-section'}>\r\n                                            <h6 className='text-left font-weight-bold'>{item}</h6>\r\n                                            <hr style={{ borderWidth: '2px', borderColor: COLORS.MAIN }} className='rounded-lg mt-1' />\r\n                                            <ul className='two-column'>\r\n                                                {anime_list?.filter(anime => anime.node.childMarkdownRemark.frontmatter.title.charAt(0) === item).map(({ node }) => (\r\n                                                    <small className='font-weight-bol' key={node.childMarkdownRemark.frontmatter.title}>\r\n                                                        <li>\r\n                                                            <Link className='text-decoration- text-white' to={`/${node.name}`}>{node.childMarkdownRemark.frontmatter.title}</Link>\r\n                                                            {user?.favourite.filter(fav => fav.mal_id === node.childMarkdownRemark.frontmatter.mal_id)[0] && <i className='fa fa-heart text-danger ml-1' style={{ fontSize: '10px' }} />}\r\n                                                            {node.childMarkdownRemark.frontmatter.type === 'Movie' && <strong className='text-warning'> : Movie</strong>}\r\n                                                            {node.childMarkdownRemark.frontmatter.status === 'Airing' && <strong className='text-primary'> : Ongoing</strong>}\r\n                                                        </li>\r\n                                                    </small>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </section>\r\n                                    ))}\r\n                                </div>\r\n                                <div className='col-lg-4'>\r\n                                    <div className=''>\r\n                                        <div className='rounded-lg'>\r\n                                            <img width='100%' src={aquaImg} style={{ objectFit: 'cover', marginBottom: '-100px' }} alt='aqua' />\r\n                                        </div>\r\n                                        <div className='p-3 bg-dark'>\r\n                                            <h6>Genre:</h6>\r\n                                            {genres.map((item) => (\r\n                                                <Link className='btn btn-main m-1' key={item + '-genre'} to={`/anime/genre/${item}`}>{item}</Link>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </LoadingOverlay>\r\n\r\n                </div>\r\n            </Container>\r\n            <div className='shape-wave-bottom'></div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const query = graphql`\r\n    {\r\n        allFile(filter: {relativeDirectory: {eq: \"anime\"}}) {\r\n        edges {\r\n            node {\r\n                childMarkdownRemark {\r\n                    frontmatter {\r\n                    mal_id\r\n                    status\r\n                    title\r\n                    type\r\n                    }\r\n                }\r\n                name\r\n            }\r\n        }\r\n    }\r\n}\r\n`\r\n\r\nexport default Combined"],"sourceRoot":""}